# -*- coding: utf-8 -*-
import os
import time

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QMutex, Qt
from PyQt5.QtGui import QIcon, QCursor, QFont
from PyQt5.QtWidgets import QApplication
from win32process import SuspendThread

from window_ui.download_thread import DownloadThread
from window_ui.ndvi_thread import NdviThread
from window_ui.search_thread import SearchThread


class Ui_MainWindow(object):

    def __init__(self):
        self.start_date = None
        self.end_date = None
        self.spatial_tuple = tuple()
        self.version = None
        self.product = None
        self.download_url = list()
        # 放在__init__(self):下，主窗口类实例，初始化时加载
        self.my_thread1 = DownloadThread()
        self.my_thread1.my_str.connect(self.get_sin_out_download)

        self.my_thread2 = SearchThread()
        self.my_thread2.my_list.connect(self.get_sin_out_search)
        self.status = 0

        self.my_thread3 = NdviThread()
        self.my_thread3.my_str.connect(self.get_sin_out_ndvi)

        self.download_count = 1

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowIcon(QIcon('./image/main.ico'))
        MainWindow.resize(1258, 904)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setMinimumSize(QtCore.QSize(464, 50))
        self.comboBox.setMaximumSize(QtCore.QSize(1000, 50))
        self.comboBox.setEditable(False)
        self.comboBox.setMaxVisibleItems(7)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.gridLayout.addWidget(self.comboBox, 10, 1, 1, 3)
        self.dateEdit_4 = QtWidgets.QDateEdit(self.centralwidget)
        self.dateEdit_4.setMinimumSize(QtCore.QSize(464, 50))
        self.dateEdit_4.setMaximumSize(QtCore.QSize(1000, 50))
        self.dateEdit_4.setDate(QtCore.QDate(2023, 1, 1))
        self.dateEdit_4.setObjectName("dateEdit_4")
        # 设置可以弹出日历
        self.dateEdit_4.setCalendarPopup(True)

        self.gridLayout.addWidget(self.dateEdit_4, 9, 1, 1, 3)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 2)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 8, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 10, 0, 1, 1)
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.centralwidget)
        font = self.textBrowser_3.font()
        font.setPointSize(15)
        self.textBrowser_3.setFont(font)
        self.textBrowser_3.setMinimumSize(QtCore.QSize(464, 50))
        self.textBrowser_3.setMaximumSize(QtCore.QSize(1000, 50))
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.gridLayout.addWidget(self.textBrowser_3, 11, 1, 1, 3)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setContentsMargins(-1, -1, 0, -1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setMinimumSize(QtCore.QSize(607, 50))
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout.addWidget(self.pushButton_6)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setMinimumSize(QtCore.QSize(607, 50))
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout.addWidget(self.pushButton_2)
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setMinimumSize(QtCore.QSize(607, 50))
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout.addWidget(self.pushButton_5)
        self.gridLayout.addLayout(self.verticalLayout, 13, 0, 1, 4)
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.centralwidget)
        font = self.textBrowser_4.font()
        font.setPointSize(15)
        self.textBrowser_4.setFont(font)
        self.textBrowser_4.setMinimumSize(QtCore.QSize(464, 50))
        self.textBrowser_4.setMaximumSize(QtCore.QSize(1000, 50))
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.gridLayout.addWidget(self.textBrowser_4, 12, 1, 1, 3)
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setObjectName("label_9")
        self.gridLayout.addWidget(self.label_9, 9, 0, 1, 1)
        self.dateEdit = QtWidgets.QDateEdit(self.centralwidget)
        self.dateEdit.setMinimumSize(QtCore.QSize(464, 50))
        self.dateEdit.setMaximumSize(QtCore.QSize(1000, 50))
        self.dateEdit.setDate(QtCore.QDate(2023, 1, 1))
        self.dateEdit.setObjectName("dateEdit")
        # 设置可以弹出日历
        self.dateEdit.setCalendarPopup(True)

        self.gridLayout.addWidget(self.dateEdit, 8, 1, 1, 3)
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setObjectName("label_13")
        self.gridLayout.addWidget(self.label_13, 11, 0, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setObjectName("label_14")
        self.gridLayout.addWidget(self.label_14, 12, 0, 1, 1)
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.centralwidget)
        font = self.textBrowser_2.font()
        font.setPointSize(15)
        self.textBrowser_2.setFont(font)
        self.textBrowser_2.setMinimumSize(QtCore.QSize(500, 0))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.gridLayout.addWidget(self.textBrowser_2, 0, 5, 14, 1)
        self.textEdit_7 = QtWidgets.QLineEdit(self.centralwidget)
        self.textEdit_7.setMinimumSize(QtCore.QSize(200, 67))
        self.textEdit_7.setMaximumSize(QtCore.QSize(350, 120))
        self.textEdit_7.setObjectName("textEdit_7")

        self.textEdit_7.setAlignment(Qt.AlignHCenter)

        font = self.textEdit_7.font()
        font.setPointSize(15)
        self.textEdit_7.setFont(font)

        self.gridLayout.addWidget(self.textEdit_7, 3, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1, Qt.AlignHCenter | Qt.AlignBottom)
        self.textEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.textEdit.setMinimumSize(QtCore.QSize(200, 67))
        self.textEdit.setMaximumSize(QtCore.QSize(350, 120))
        self.textEdit.setObjectName("textEdit")

        self.textEdit.setAlignment(Qt.AlignHCenter)

        font = self.textEdit.font()
        font.setPointSize(15)
        self.textEdit.setFont(font)

        self.gridLayout.addWidget(self.textEdit, 2, 2, 1, 1)
        self.textEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.textEdit_5.setMinimumSize(QtCore.QSize(200, 67))
        self.textEdit_5.setMaximumSize(QtCore.QSize(350, 120))
        self.textEdit_5.setObjectName("textEdit_5")

        self.textEdit_5.setAlignment(Qt.AlignHCenter)

        font = self.textEdit_5.font()
        font.setPointSize(15)
        self.textEdit_5.setFont(font)

        self.gridLayout.addWidget(self.textEdit_5, 3, 3, 1, 1)
        self.textEdit_6 = QtWidgets.QLineEdit(self.centralwidget)
        self.textEdit_6.setMinimumSize(QtCore.QSize(200, 67))
        self.textEdit_6.setMaximumSize(QtCore.QSize(350, 120))
        self.textEdit_6.setObjectName("textEdit_6")

        self.textEdit_6.setAlignment(Qt.AlignHCenter)

        font = self.textEdit_6.font()
        font.setPointSize(15)
        self.textEdit_6.setFont(font)

        self.gridLayout.addWidget(self.textEdit_6, 4, 2, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setMinimumSize(QtCore.QSize(20, 10))
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 2, 3, 1, 1, Qt.AlignHCenter | Qt.AlignBottom)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 5, 2, 1, 1, Qt.AlignHCenter | Qt.AlignTop)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 2, 1, 1, Qt.AlignHCenter | Qt.AlignBottom)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1258, 22))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.pushButton_6.clicked.connect(lambda: self.start_search_thread())
        # self.pushButton_2.clicked.connect(self.download_files)
        self.pushButton_2.clicked.connect(lambda: self.stop_download_task())
        self.pushButton_5.clicked.connect(lambda: self.start_ndvi_thread())

    def start_ndvi_thread(self):
        """
        启动线程
        :return:
        """
        try:
            self.get_search_params()
            self.textBrowser_2.insertPlainText("开始生成单天的ndvi数据...\n")
            self.my_thread3.set_params(self.start_date, self.end_date, self.spatial_tuple)
            self.my_thread3.start()
        except Exception as error:
            print(error)

    def start_download_thread(self):
        """
        启动线程
        :return:
        """
        try:
            if self.download_url:
                # 每次启动前都需要初始化download_count为1
                # self.textBrowser_3.setText(str(len(self.download_url)))
                self.textBrowser_2.insertPlainText("正在开始下载数据...\n")
                print(self.my_thread1.currentThreadId())
                self.my_thread1.set_file_url(self.download_url, self.start_date, self.end_date, self.spatial_tuple)
                self.my_thread1.start()
                # self.textBrowser_2.insertPlainText("所有下载均已完成，请查收！\n")
            else:
                self.textBrowser_2.setPlainText("暂无可下载的数据\n")
        except Exception as error:
            print(error)

    def start_search_thread(self):
        """
        启动线程
        :return:
        """
        try:
            self.get_search_params()
            self.pushButton_2.setEnabled(True)
            self.my_thread2.set_params(self.start_date, self.end_date, self.spatial_tuple, self.product, self.version)
            self.my_thread2.start()
            self.textBrowser_2.setPlainText("")
            # 这里需要将检索到的数据展示到右侧的 textbrow 中 以遍用户进行查看
            self.textBrowser_2.insertPlainText("正在开始检索数据...\n")

        except Exception as error:
            print(error)

    def get_search_params(self):
        self.start_date = self.dateEdit.date().toString('yyyy-MM-dd')
        self.end_date = self.dateEdit_4.date().toString('yyyy-MM-dd')
        self.spatial_tuple = (
            int(self.textEdit_7.text()),
            int(self.textEdit.text()),
            int(self.textEdit_5.text()),
            int(self.textEdit_6.text())
        )

        self.product = ["MOD03", "MOD09GQ", "MOD35_L2"]

        if self.comboBox.currentText() == "MOD03（61）、MOD09GQ（6）、MOD35_L2（61）":
            self.version = 1
        else:
            self.version = 0

        print(self.start_date)
        print(self.end_date)
        print(self.spatial_tuple)
        print(self.version)
        print(self.product)

    def get_sin_out_download(self, out_str):
        """
        :param out_str:
        :return:
        """
        download_file_name = out_str[0].split("/")[-1]
        download_status = out_str[1]
        if download_status == 1:
            self.textBrowser_2.insertPlainText(f"[{download_file_name}]正在下载...\n")
        if download_status == 0:
            self.textBrowser_2.insertPlainText("done\n")
            self.pushButton_2.setEnabled(True)
            self.textBrowser_4.setPlainText(str(self.download_count))
            self.download_count += 1
        if download_status == 10 and len(self.download_url) == 0:
            self.textBrowser_2.insertPlainText("当前数据均已下载完成！\n")
            self.pushButton_6.setEnabled(True)

    def get_sin_out_search(self, out_str):
        """
        :param out_str:
        :return:
        """
        self.download_url = out_str
        # 在进行检索展示之前需要先清空textbrowser 避免上次的检索结果对本次检索结果造成影响
        self.textBrowser_3.setPlainText("")
        self.textBrowser_2.setPlainText("")
        # 这里需要将检索到的数据展示到右侧的 textbrow 中 以遍用户进行查看
        self.textBrowser_2.insertPlainText(f"已经检索到了[{len(self.download_url)}]景数据...\n")
        self.textBrowser_3.setPlainText(str(len(self.download_url)))
        for download_url in self.download_url:
            self.textBrowser_2.insertPlainText(os.path.basename(download_url) + "\n")
            print(os.path.basename(download_url))
            # 实时页面刷新， 防止textbrowser中的信息加载不出来
            QApplication.processEvents()
        if self.download_url:
            self.download_count = 1
            # 这里给个时间暂停模块，方便用户可以观察到检索到的数据
            time.sleep(2)
            self.textBrowser_2.setPlainText("")
            # 检索完毕执行下载模块
            self.start_download_thread()

    def get_sin_out_ndvi(self, out_str):
        """
        :param out_str:
        :return:
        """
        self.textBrowser_2.insertPlainText(out_str + "\n")
        # 实时页面刷新， 防止textbrowser中的信息加载不出来
        QApplication.processEvents()

    def stop_download_task(self):
        if self.status == 0:
            self.status = 4
            # 需要通过信号的方式传递
            self.textBrowser_2.insertPlainText("正在下载的数据下载完成将会停止下载！\n")
            self.pushButton_2.setText("2.继续下载")
            self.pushButton_2.setEnabled(False)
            self.pushButton_6.setEnabled(False)
            self.my_thread1.stop()
            print("开始暂停")
        else:
            self.status = 0
            self.textBrowser_2.insertPlainText("继续开始下载！\n")
            self.pushButton_2.setText("2.暂停下载")
            # 重新启动下载
            print(self.download_url)
            if self.download_url:
                self.my_thread1.resume()
                self.my_thread1.set_file_url(self.download_url, self.start_date, self.end_date, self.spatial_tuple)
                self.my_thread1.start()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "长势监测软件"))
        font = self.comboBox.font()
        font.setPointSize(15)
        self.comboBox.setFont(font)
        self.comboBox.setCurrentText(_translate("MainWindow", "MOD03（61）、MOD09GQ（6）、MOD35_L2（61）"))
        self.comboBox.setItemText(0, _translate("MainWindow", "MOD03（61）、MOD09GQ（6）、MOD35_L2（61）"))
        self.comboBox.setItemText(1, _translate("MainWindow", "MOD03（61）、MOD09GQ（61）、MOD35_L2（61）"))
        self.dateEdit_4.setDisplayFormat(_translate("MainWindow", "yyyy-M-d"))
        self.label.setText(_translate("MainWindow", "监测坐标范围（十进制度）:"))
        font = self.label_6.font()
        font.setPointSize(15)
        self.label_6.setFont(font)
        self.label_6.setText(_translate("MainWindow", "起始日期："))
        font = self.label_7.font()
        font.setPointSize(15)
        self.label_7.setFont(font)
        self.label_7.setText(_translate("MainWindow", "所需数据版本："))
        font = self.pushButton_6.font()
        font.setPointSize(15)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setText(_translate("MainWindow", "1.下载数据"))
        font = self.pushButton_2.font()
        font.setPointSize(15)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setText(_translate("MainWindow", "2.暂停下载"))
        font = self.pushButton_5.font()
        font.setPointSize(15)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setText(_translate("MainWindow", "3.生成 NDVI 数据"))
        font = self.label_9.font()
        font.setPointSize(15)
        self.label_9.setFont(font)
        self.label_9.setText(_translate("MainWindow", "终止日期："))
        font = self.dateEdit.font()
        font.setPointSize(15)
        self.dateEdit.setFont(font)
        self.dateEdit.setDisplayFormat(_translate("MainWindow", "yyyy-M-d"))
        font = self.dateEdit_4.font()
        font.setPointSize(15)
        self.dateEdit_4.setFont(font)
        font = self.label_13.font()
        font.setPointSize(15)
        self.label_13.setFont(font)
        self.label_13.setText(_translate("MainWindow", "总个数："))
        font = self.label_14.font()
        font.setPointSize(15)
        self.label_14.setFont(font)
        self.label_14.setText(_translate("MainWindow", "已下载："))
        font = self.label_3.font()
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setText(_translate("MainWindow", "左"))
        font = self.label_4.font()
        font.setPointSize(15)
        self.label_4.setFont(font)
        self.label_4.setText(_translate("MainWindow", "右"))
        font = self.label_5.font()
        font.setPointSize(15)
        self.label_5.setFont(font)
        self.label_5.setText(_translate("MainWindow", "下"))
        font = self.label_2.font()
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setText(_translate("MainWindow", "上"))
        self.menu.setTitle(_translate("MainWindow", "数据处理"))
